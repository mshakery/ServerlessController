// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative distributed_lock.proto


syntax = "proto3";

package distributedLock;

option go_package="github.com/mshakery/ServerlessController";

service DistributedLock {
  rpc Lock(LockRequest) returns (LockResponse) {}
  rpc Unlock(UnlockRequest) returns (UnlockResponse) {}
}

enum LockStatus {
  ACTION_SUCCESSFUL = 0;
  LOCK_ID_NOT_FOUND = -1;
}

message LockRequest {
  string lockId = 1;
}

message LockResponse {
  LockStatus status = 1;  // 0 for success, minus for errors. TODO define errors
}

message UnlockRequest {
  string lockId = 1;
}

message UnlockResponse {
  LockStatus status = 1;  // 0 for success, minus for errors. TODO define errors (one error should be lock_id not found)
}
